// Generated by Selenium IDE
package tem2GoFichaje;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Arrays;
import java.util.Calendar;
import java.util.Date;
import java.util.List;

import org.junit.After;
import org.junit.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Actions;

/**
 * @author jcizquierdo
 */
public class ImputacionesTest {

	enum Jornada {
		REDUCIDA, MAÑANA, TARDE;
	}

	/**
	 * Datos a rellenar
	 */
	private static final String FECHA_START_IMPUTACION = "01/01/2024";
	private static final String FECHA_END_IMPUTACION = "23/02/2024";
	
	// Comienzo de jordanda intensiva (mirar bien el año)
	private static final String START_VERANO = "15/06/2023";
	// Fin de Jordanda intensiva (mirar bien el año)
	private static final String END_VERANO = "15/09/2023";
	
	// Festivos 2024
	private static final String[] FESTIVOS = { 
			"01/01/2024" 						//Año nuevo
			, "06/01/2024"						//Reyes magos
			, "28/02/2024"						//Día de Andalucía
			, "28/03/2024",	"29/03/2024"		//Jueves y Viernes Santo
			, "17/04/2024"						//Miércoles de Feria
			, "01/05/2024"						//Día del trabajo
			, "30/05/2024"						//Corpus
			, "15/08/2024"						//Día de la Asunción
			, "01/11/2024"						//Todos los santos
			, "06/12/2024"						//Día de la constitución
			, "09/12/2024"						//Día de Inmaculada Concepción de María
			, "25/12/2024"};					//Navidad
	
	// Días de vacaciones 2024
	private static final String[] VACACIONES = { 
			"22/01/2024", "23/01/2024"												//Viaje Canarias
	};
	
	// Festivos 2023
//	private static final String[] FESTIVOS = { 
//			"02/01/2023" 						//Año nuevo
//			, "06/01/2023"						//Reyes magos
//			, "28/02/2023"						//Día de Andalucía
//			, "06/04/2023",	"07/04/2023"		//Jueves y Viernes Santo
//			, "26/04/2023"						//Miércoles de Feria
//			, "01/05/2023"						//Día del trabajo
//			, "08/06/2023"						//Corpus
//			, "15/08/2023"						//Día de la Asunción
//			, "12/10/2023"						//Día de la Hispanidad
//			, "01/11/2023"						//Todos los santos
//			, "06/12/2023"						//Día de la constitución
//			, "08/12/2023"						//Día de Inmaculada Concepción de María
//			, "25/12/2023"};					//Navidad

	// Días de vacaciones 2023
//	private static final String[] VACACIONES = { 
//			"31/03/2023", "03/04/2023", "04/04/2023", "05/04/2023", "10/04/2023"	//Semana Santa (2023)
//			, "08/05/2023"															//Feria Jerez
//			, "09/06/2023"															//Corpus
//			, "10/07/2023", "11/07/2023", "12/07/2023", "13/07/2023", "14/07/2023" 	//Julio
//			, "31/07/2023", "01/08/2023", "02/08/2023", "03/08/2023", "04/08/2023" 	//Agosto 1
//			, "07/08/2023", "08/08/2023", "09/08/2023", "10/08/2023", "11/08/2023" 	//Agosto 2
//			, "14/08/2023", "16/08/2023", "17/08/2023", "18/08/2023"				//Agosto 3
//			, "26/12/2023", "27/12/2023", "28/12/2023", "29/12/2023"};				//Navidades	
	private static final String URL_CHROME_DRIVER = "C:\\proyectos\\EMERGYA\\TEAM2GO\\122\\chromedriver.exe";
	private static final String USUARIO = "jmplobato";
	private static final String PASSWORD = "Calendula009$";
		
	// Hora de fin de un dia
	private static final String HOUR_END = " 23:59:59";
	// Hora de comienzo de un dia
	private static final String HOUR_START = " 00:00:00";
	// Formatos de fecha
	private static final SimpleDateFormat FORMAT_CON_TIEMPO = new SimpleDateFormat("dd/MM/yyyy hh:mm:ss");
	private static final SimpleDateFormat FORMAT_SIN_TIEMPO = new SimpleDateFormat("dd/MM/yyyy");
	private WebDriver driver;
	JavascriptExecutor js;

	@After
	public void tearDown() {
		driver.quit();
	}

	// @Test
	// public void deleteImputacion() throws InterruptedException {
	// System.setProperty("webdriver.chrome.driver", "C:\\Users\\jcizquierdo\\AppData\\Local\\Google\\Chrome\\Application\\chromedriver.exe");
	// driver = new ChromeDriver();
	// js = (JavascriptExecutor) driver;
	// this.login();
	// driver.navigate().to("https://emergya.myteam2go.com/pages/employeePortal/workAssistanceList");
	// Thread.sleep(3000);
	// driver.findElement(By.cssSelector(".ui-chkbox-icon")).click();
	// for (int i = 0; i < 10; i++) {
	// // 3 | click | css=#tabView\3AworkAssistanceForm\3AworkAssistance\3A 50\3Aj_idt627 > .fa |
	// driver.findElement(By.cssSelector("#tabView\\3AworkAssistanceForm\\3AworkAssistance\\3A 50\\3Aj_idt627 > .fa")).click();
	// // 4 | click | css=#formConfir\3Aj_idt409 > .ui-button-text |
	// driver.findElement(By.cssSelector("#formConfir\\3Aj_idt409 > .ui-button-text")).click();
	//
	// }
	//
	// }

	@Test
	public void imputar() throws ParseException, InterruptedException {
		String starDay = FECHA_START_IMPUTACION;
		String endDay = FECHA_END_IMPUTACION;
		Date startDate = FORMAT_CON_TIEMPO.parse(starDay + HOUR_START);
		Date endDate = FORMAT_CON_TIEMPO.parse(endDay + HOUR_END);
		if (startDate.compareTo(endDate) > 0) {
			throw new InterruptedException("La fecha de inicio no puede ser mayor que la de fin");
		}
		Date min = FORMAT_CON_TIEMPO.parse(START_VERANO + HOUR_START);
		Date max = FORMAT_CON_TIEMPO.parse(END_VERANO + HOUR_END);

		Calendar start = Calendar.getInstance();
		start.setTime(startDate);
		Calendar end = Calendar.getInstance();
		end.setTime(endDate);

		System.setProperty("webdriver.chrome.driver", URL_CHROME_DRIVER);
		driver = new ChromeDriver();
		js = (JavascriptExecutor) driver;

		this.login();
		Thread.sleep(2000);
		// Test name: MediaJornada
		// Step # | name | target | value
		// 1 | open | https://emergya.myteam2go.com/pages/employeePortal/workAssistanceList?i=0 |
		driver.navigate().to("https://emergya.myteam2go.com/pages/employeePortal/workAssistanceList?i=0");
		Thread.sleep(2000);
		List<String> vacaciones = Arrays.asList(VACACIONES);
		List<String> festivos = Arrays.asList(FESTIVOS);

		for (Date date = start.getTime(); start.before(end); start.add(Calendar.DATE, 1), date = start.getTime()) {
			Calendar fecha = Calendar.getInstance();
			fecha.setTime(date);
			int dayWeek = fecha.get(Calendar.DAY_OF_WEEK);
			boolean jornadaVerano = date.compareTo(min) >= 0 && date.compareTo(max) <= 0;
			if (Calendar.SUNDAY == dayWeek || Calendar.SATURDAY == dayWeek) {
				System.out.println("Fin de semana");
				System.out.println(date.toString());
			} else if (festivos.contains(FORMAT_SIN_TIEMPO.format(date))) {
				System.out.println("Festivo");
				System.out.println(date.toString());

			} else if (vacaciones.contains(FORMAT_SIN_TIEMPO.format(date))) {
				System.out.println("Vacaciones");
				System.out.println(date.toString());
			} else {
				if (jornadaVerano) {
					if (Calendar.SUNDAY == dayWeek || Calendar.SATURDAY == dayWeek) {
						System.out.println("Fin de semana");
						System.out.println(date.toString());
					} else {
						System.out.println("Jornada Verano");
						System.out.println(date.toString());
						this.mediaJornada(FORMAT_SIN_TIEMPO.format(date));
					}
				} else {
					if (Calendar.MONDAY == dayWeek || Calendar.WEDNESDAY == dayWeek || Calendar.FRIDAY == dayWeek) {
						System.out.println("Media");
						System.out.println(date.toString());
						this.mediaJornada(FORMAT_SIN_TIEMPO.format(date));
					}
					if (Calendar.TUESDAY == dayWeek || Calendar.THURSDAY == dayWeek) {
						System.out.println("Completa");
						System.out.println(date.toString());
						this.JornadaCompleta(FORMAT_SIN_TIEMPO.format(date));
					}
				}
			}
		}

		// 5 | close | |
		driver.close();

	}

	private void login() {
		// Test name: Untitled
		// Step # | name | target | value
		// 1 | open | https://emergya.myteam2go.com/login |
		driver.get("https://emergya.myteam2go.com/login/emergya?c=ODA=");
		// 2 | type | id=j_username | jcizquierdo
		driver.findElement(By.id("j_username")).sendKeys(USUARIO);
		// 3 | type | id=j_password | emee.12345
		driver.findElement(By.id("j_password")).sendKeys(PASSWORD);
		// 4 | click | name=login |
		driver.findElement(By.name("login")).click();
	}

	private void mediaJornada(String fecha) throws InterruptedException {
		this.rellenarFormulario(fecha, "08:00", "15:00", Jornada.REDUCIDA);
	}

	private void JornadaCompleta(String fecha) throws InterruptedException {
		this.rellenarFormulario(fecha, "08:00", "15:00", Jornada.MAÑANA);
		this.rellenarFormulario(fecha, "16:00", "19:00", Jornada.TARDE);
	}

	/**
	 * Rellenar formulario.
	 *
	 * @param fecha
	 *            the fecha
	 * @param horaInicio
	 *            the hora inicio
	 * @param horaFin
	 *            the hora fin
	 * @param jornada
	 *            the jornada
	 * @throws InterruptedException
	 *             the interrupted exception
	 */
	private void rellenarFormulario(String fecha, String horaInicio, String horaFin, Jornada jornada) throws InterruptedException {
		// 2 | click | id=tabView:workAssistanceForm:workAssistance:add |
		Thread.sleep(2000);
		JavascriptExecutor j = (JavascriptExecutor) driver;
		Thread.sleep(1000);
		driver.findElement(By.id("tabView:workAssistanceForm:workAssistance:add")).click();
		// 3 | mouseDown | id=workAssistanceEditForm:input_input |
		{
			Thread.sleep(1000);
			WebElement element = driver.findElement(By.id("workAssistanceEditForm:input_input"));
			Actions builder = new Actions(driver);
			builder.moveToElement(element).clickAndHold().perform();
		}
		// 4 | click | id=workAssistanceEditForm:input_input |
		// driver.findElement(By.id("workAssistanceEditForm:input_input")).click();
		Thread.sleep(1000);
		j.executeScript("document.getElementById('ui-datepicker-div').style.display='none';");
		// 5 | type | id=workAssistanceEditForm:input_input | 05/05/2021 08:00
		Thread.sleep(1000);
		driver.findElement(By.id("workAssistanceEditForm:input_input")).sendKeys(fecha + " " + horaInicio);
		// 6 | click | id=workAssistanceEditForm:inputOption_label |
		// driver.findElement(By.id("workAssistanceEditForm:inputOption_label")).click();
		// 7 | click | id=workAssistanceEditForm:inputOption_1 |
		Thread.sleep(1000);
		driver.findElement(By.id("workAssistanceEditForm:inputOption_label")).click();
		Thread.sleep(1000);
		if (Jornada.REDUCIDA.equals(jornada) || Jornada.MAÑANA.equals(jornada)) {
			driver.findElement(By.id("workAssistanceEditForm:inputOption_1")).click();
		}
		if (Jornada.TARDE.equals(jornada)) {
			driver.findElement(By.id("workAssistanceEditForm:inputOption_4")).click();
		}
		{
			Thread.sleep(1000);
			WebElement element = driver.findElement(By.id("workAssistanceEditForm:output_input"));
			Actions builder = new Actions(driver);
			builder.moveToElement(element).clickAndHold().perform();
		}
		// 8 | click | id=workAssistanceEditForm:output_input |
		// driver.findElement(By.id("workAssistanceEditForm:output_input")).click();
		Thread.sleep(1000);
		j.executeScript("document.getElementById('ui-datepicker-div').style.display='none';");
		// 9 | type | id=workAssistanceEditForm:output_input | 05/05/2021 15:00
		Thread.sleep(1000);
		driver.findElement(By.id("workAssistanceEditForm:output_input")).sendKeys(fecha + " " + horaFin);
		// 10 | click | id=workAssistanceEditForm:outputOption_label |
		// driver.findElement(By.id("workAssistanceEditForm:outputOption_label")).click();
		// 11 | click | id=workAssistanceEditForm:outputOption_2 |
		Thread.sleep(1000);
		driver.findElement(By.id("workAssistanceEditForm:outputOption_label")).click();
		Thread.sleep(1000);
		if (Jornada.REDUCIDA.equals(jornada) || Jornada.TARDE.equals(jornada)) {
			driver.findElement(By.id("workAssistanceEditForm:outputOption_2")).click();
		}
		if (Jornada.MAÑANA.equals(jornada)) {
			driver.findElement(By.id("workAssistanceEditForm:outputOption_3")).click();
		}
		Thread.sleep(3000);
		// 12 | click | id=workAssistanceEditForm:saveWithoutUpdate |
		driver.findElement(By.id("workAssistanceEditForm:saveWithoutUpdate")).click();
		Thread.sleep(4000);
	}
}
